{"version":3,"sources":["components/card/card.js","components/display-weather/displayWeather.js","api.js","components/search-weather-form/searchWeatherForm.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","dayWeather","sevendaysWeatherData","className","momenttz","tz","moment","unix","dt","timezone","format","src","weather","icon","alt","Math","round","temp","max","min","DisplayWeather","currentWeatherData","name","sys","country","main","daily","pop","humidity","wind","speed","slice","map","random","api","process","SearchWeatherForm","useState","city","zipcode","countrycode","form","setForm","setCurrentWeatherData","setSevendaysWeatherData","isCityInputBoxVisible","setisCityInputBoxVisible","isZipCodeInputBoxVisible","setisZipCodeInputBoxVisible","loading","setLoading","hasError","setHasError","a","coord","lat","lon","fetch","then","res","ok","Error","console","log","json","catch","error","sevenDaysData","e","preventDefault","data","resetWeatherSearchForm","useEffect","getSevenDaysData","handleChange","target","value","onClick","type","placeholder","onChange","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cac1315.chunk.js","sourcesContent":["import React from 'react';\nimport moment from 'moment'; // To handle time format\nimport momenttz from 'moment-timezone'; // To handle timezone\n\nimport './card.css';\n\nconst Card = (props) => {\n\tconst { dayWeather, sevendaysWeatherData } = props;\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<h3>\n\t\t\t\t{momenttz\n\t\t\t\t\t.tz(moment.unix(dayWeather.dt), sevendaysWeatherData.timezone)\n\t\t\t\t\t.format('dddd')}\n\t\t\t</h3>\n\t\t\t<img\n\t\t\t\tsrc={`http://openweathermap.org/img/wn/${dayWeather.weather[0].icon}@2x.png`}\n\t\t\t\talt=\"weather\"\n\t\t\t/>\n\t\t\t<span>\n\t\t\t\t{`${Math.round(dayWeather.temp.max - 273.15)}C`} <sup>o</sup>/\n\t\t\t\t{` ${Math.round(dayWeather.temp.min - 273.15)}C`} <sup>o</sup>\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nexport default Card;\n","import React from 'react';\nimport momenttz from 'moment-timezone'; // To handle timezome\n\nimport Card from '../card/card';\nimport './displayWeather.css';\n\nconst DisplayWeather = (props) => {\n\tconst { currentWeatherData, sevendaysWeatherData } = props;\n\n\treturn (\n\t\t<div className=\"section\">\n\t\t\t<div className=\"current-weather\">\n\t\t\t\t<div className=\"location\">\n\t\t\t\t\t<h1>\n\t\t\t\t\t\t{currentWeatherData.name}, {currentWeatherData.sys.country}\n\t\t\t\t\t</h1>\n\t\t\t\t\t<h3>{momenttz().tz(sevendaysWeatherData.timezone).format('llll')}</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"main\">\n\t\t\t\t\t<div className=\"main-image\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={`http://openweathermap.org/img/wn/${currentWeatherData.weather[0].icon}@2x.png`}\n\t\t\t\t\t\t\talt=\"weather\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className=\"main-text\">\n\t\t\t\t\t\t\t{currentWeatherData.weather[0].main}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t{`${Math.round(currentWeatherData.main.temp - 273.15)}C`}\n\t\t\t\t\t\t<sup>o</sup>\n\t\t\t\t\t</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"description\">\n\t\t\t\t\t<span>\n\t\t\t\t\t\tPrecipitation: {`${sevendaysWeatherData.daily[0].pop * 100}%`}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span>Humidity: {`${currentWeatherData.main.humidity}%`}</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\tWind: {`${Math.round(currentWeatherData.wind.speed * 10)}mph`}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"sevendays-weather\">\n\t\t\t\t{sevendaysWeatherData.daily.slice(1).map((dayWeather) => (\n\t\t\t\t\t<Card\n\t\t\t\t\t\tkey={Math.random()}\n\t\t\t\t\t\tdayWeather={dayWeather}\n\t\t\t\t\t\tsevendaysWeatherData={sevendaysWeatherData}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default DisplayWeather;\n","export const api = {\n\tkey: process.env.REACT_APP_API_KEY,\n\tbase: 'https://api.openweathermap.org/data/2.5/',\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link, Router } from 'react-router-dom';\n\nimport Result from '../display-weather/displayWeather';\nimport { api } from '../../api';\nimport './searchWeatherForm.css';\n\nconst SearchWeatherForm = (props) => {\n\tconst [form, setForm] = useState({\n\t\tcity: '',\n\t\tzipcode: '',\n\t\tcountrycode: '',\n\t});\n\tconst [currentWeatherData, setCurrentWeatherData] = useState(null);\n\tconst [sevendaysWeatherData, setSevendaysWeatherData] = useState(null);\n\tconst [isCityInputBoxVisible, setisCityInputBoxVisible] = useState(false);\n\tconst [isZipCodeInputBoxVisible, setisZipCodeInputBoxVisible] =\n\t\tuseState(false);\n\tconst [loading, setLoading] = useState(false);\n\tconst [hasError, setHasError] = useState(false);\n\n\t// comment out to check data format\n\t// useEffect(() => {\n\t// \tconsole.log(currentWeatherData, sevendaysWeatherData);\n\t// }, [currentWeatherData, sevendaysWeatherData]);\n\n\t// To get forecast for next seven days' data by using current weather's data\n\tuseEffect(() => {\n\t\tif (currentWeatherData) {\n\t\t\tgetSevenDaysData(currentWeatherData);\n\t\t}\n\t}, [currentWeatherData]);\n\n\tasync function getSevenDaysData(currentWeatherData) {\n\t\tconst { lat, lon } = currentWeatherData.coord;\n\t\tconst sevenDaysData = await fetch(\n\t\t\t`${api.base}onecall?lat=${lat}&lon=${lon}&exclude=minutely,hourly&appid=${api.key}`\n\t\t) //\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log('ok');\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t\tsetHasError(true);\n\t\t\t});\n\n\t\tsetSevendaysWeatherData(sevenDaysData);\n\t\tsetLoading(false);\n\t}\n\n\tasync function getWeatherDataByCity(e) {\n\t\te.preventDefault();\n\n\t\tconst data = await fetch(\n\t\t\t`${api.base}weather?q=${form.city}&appid=${api.key}`\n\t\t) //\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log('ok');\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t\tsetHasError(true);\n\t\t\t});\n\n\t\tsetLoading(true);\n\t\tsetCurrentWeatherData(data);\n\t\tresetWeatherSearchForm();\n\t}\n\n\tasync function getWeatherDataByZipCode(e) {\n\t\te.preventDefault();\n\n\t\tconst data = await fetch(\n\t\t\t`${api.base}weather?zip=${form.zipcode},${form.countrycode}&appid=${api.key}`\n\t\t) //\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log('ok');\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t\tsetHasError(true);\n\t\t\t});\n\n\t\tsetLoading(true);\n\t\tsetCurrentWeatherData(data);\n\t\tresetWeatherSearchForm();\n\t}\n\n\tconst resetWeatherSearchForm = () => {\n\t\tsetForm({\n\t\t\tcity: '',\n\t\t\tzipcode: '',\n\t\t\tcountrycode: '',\n\t\t});\n\t};\n\n\tconst handleChange = (e) => {\n\t\tlet name = e.target.name;\n\t\tlet value = e.target.value;\n\n\t\tif (name === 'city') {\n\t\t\tsetForm({ ...form, city: value });\n\t\t}\n\n\t\tif (name === 'zipcode') {\n\t\t\tsetForm({ ...form, zipcode: value });\n\t\t}\n\n\t\tif (name === 'countrycode') {\n\t\t\tsetForm({ ...form, countrycode: value });\n\t\t}\n\t};\n\n\tconst handleSearchByCity = () => {\n\t\tsetisCityInputBoxVisible(true);\n\t\tsetisZipCodeInputBoxVisible(false);\n\t};\n\n\tconst handleSearchByZipCode = () => {\n\t\tsetisZipCodeInputBoxVisible(true);\n\t\tsetisCityInputBoxVisible(false);\n\t};\n\n\treturn (\n\t\t<div className=\"section\">\n\t\t\t<h1>Weather App</h1>\n\t\t\t<h3>search by...</h3>\n\t\t\t<div className=\"option__container\">\n\t\t\t\t<button className=\"option__container--btn\" onClick={handleSearchByCity}>\n\t\t\t\t\tCity\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"option__container--btn\"\n\t\t\t\t\tonClick={handleSearchByZipCode}\n\t\t\t\t>\n\t\t\t\t\tZip Code\n\t\t\t\t</button>\n\t\t\t</div>\n\n\t\t\t<form className=\"search-form\">\n\t\t\t\t<div className={`input ${isCityInputBoxVisible ? '' : 'hidden'}`}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"city\"\n\t\t\t\t\t\tvalue={form.city}\n\t\t\t\t\t\tplaceholder=\"Enter city name\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className={`input ${isZipCodeInputBoxVisible ? '' : 'hidden'}`}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"zipcode\"\n\t\t\t\t\t\tvalue={form.zipcode}\n\t\t\t\t\t\tplaceholder=\"Enter zip code\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"countrycode\"\n\t\t\t\t\t\tvalue={form.countrycode}\n\t\t\t\t\t\tplaceholder=\"Enter country code\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t{isCityInputBoxVisible || isZipCodeInputBoxVisible ? (\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\tisZipCodeInputBoxVisible\n\t\t\t\t\t\t\t\t? getWeatherDataByZipCode\n\t\t\t\t\t\t\t\t: getWeatherDataByCity\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tSearch\n\t\t\t\t\t</button>\n\t\t\t\t) : (\n\t\t\t\t\t''\n\t\t\t\t)}\n\t\t\t</form>\n\n\t\t\t{loading && <div className=\"loading\"></div>}\n\n\t\t\t{hasError && (\n\t\t\t\t<button>\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<Link to=\"/\">Try again</Link>\n\t\t\t\t\t</Router>\n\t\t\t\t</button>\n\t\t\t)}\n\n\t\t\t{sevendaysWeatherData && (\n\t\t\t\t<Result\n\t\t\t\t\tcurrentWeatherData={currentWeatherData}\n\t\t\t\t\tsevendaysWeatherData={sevendaysWeatherData}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default SearchWeatherForm;\n","import './App.css';\nimport SearchWeatherForm from './components/search-weather-form/searchWeatherForm';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<SearchWeatherForm />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}